name: Build and release server-side apps

on: push

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Install dependent modules
        run: yarn install --frozen-lockfile --network-timeout 180000

      - name: Build apps
        run: |
          yarn --cwd packages/comment build
          yarn --cwd packages/server  build

      - name: Run tests
        run: |
          yarn lint
          yarn jest --reporters=default --reporters=jest-junit --coverage --coverageDirectory reports/coverage

      - name: Test report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Jest Tests
          path: reports/jest-*.xml
          reporter: jest-junit

      - name: Coverage report
        uses: romeovs/lcov-reporter-action@v0.2.16
        with:
          lcov-file: reports/coverage/lcov.info

      - name: Create release directory tree
        run: |
          mkdir -p build/apps
          cp -a packages/comment/build       build/apps/comment
          mkdir -p build/apps/server
          cp -a packages/server/dist         build/apps/server
          cp -a packages/server/src/start.sh build/apps/server
        shell: bash

      - name: Archive apps
        uses: ihiroky/archive-action@v1
        with:
          file_path: build/server-apps.zip
          root_dir: build/apps/

      - name: Gets latest created release info
        id: latest_release_info
        uses: ihiroky/action-latest-release-info@master
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - run: |
          echo draft:${{ steps.latest_release_info.outputs.draft }}
          echo upload_url:${{ steps.latest_release_info.outputs.upload_url }}
        shell: bash

      - name: Upload asset to github release if draft release exists.
        id: upload-release-asset
        if: ${{ steps.latest_release_info.outputs.draft == true }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.latest_release_info.outputs.upload_url }}
          asset_path: build/server-apps.zip
          asset_name: server-apps.zip
          asset_content_type: application/zip

      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: server-apps-${{ github.run_number }}
          path: build/apps/
