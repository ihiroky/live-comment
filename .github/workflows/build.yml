name: Check

on: push

jobs:
#
# Run tests and code checkers
#
  check:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: |
          npm c set fetch-retry-maxtimeout 180000
          npm ci

      - name: Run checks
        run: |
          npm run lint
          npm run test
          npm run typecheck
        shell: bash

      - name: Test report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Test report on ${{ matrix.os }}
          path: reports/jest-*.xml
          reporter: jest-junit

      - name: Check coverage
        uses: VeryGoodOpenSource/very_good_coverage@v2
        with:
          path: 'reports/coverage/lcov.info'
          min_coverage: 85
#
# Build desktop app
#
  desktop:
    needs: check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: |
          npm c set fetch-retry-maxtimeout 180000
          npm ci

      - name: Build apps
        run: |
          npm -w packages/app run clean
          npm -w packages/app run build-desktop
          npm -w packages/app run build-electron-installer
        shell: bash
        env:
          NODE_ENV: production
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Gets latest release info
        id: latest_release
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/ihiroky/live-comment/releases?per_page=1&page=1
          owner: octokit
          repo: request-action
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload asset to github release if draft release exists.
        id: upload-release-asset
        if: ${{ fromJson(steps.latest_release.outputs.data)[0].draft == true }}
        uses: ihiroky/upload-release-asset@main
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ fromJson(steps.latest_release.outputs.data)[0].upload_url }}
          asset_path: build/server-apps-${{ github.run_number }}.zip
          asset_name: server-apps-${{ github.run_number }}.zip
          asset_content_type: application/zip

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: live-comment-for-${{ matrix.os }}-${{ github.run_number }}
          path: packages/app/dist/live-comment*
#
# Build server side apps
#
  server-side:
    needs: check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: |
          npm c set fetch-retry-maxtimeout 180000
          npm ci

      - name: Build apps
        run: |
          npm -w packages/app run clean
          npm -w packages/app run build-comment
          npm -w packages/app run build-servers

      - name: Create release directory tree
        run: |
          rm -rf build/apps # For local execution
          mkdir -p build/apps/server
          cp -a packages/app/dist/bundle/comment  build/apps/comment
          cp -a packages/app/resources/icon@4.png build/apps/comment/favicon.ico
          cp -a packages/app/resources/logo.png   build/apps/comment/logo.png
          cp -a packages/app/src/server/scripts/* build/apps/server/
          cp -a packages/app/dist/bundle/server/* build/apps/server/
        shell: bash

      - name: Archive apps
        uses: ihiroky/archive-action@v1
        with:
          file_path: build/server-apps-${{ github.run_number }}.zip
          root_dir: build/apps/

      - name: Gets latest release info
        id: latest_release
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/ihiroky/live-comment/releases?per_page=1&page=1
          owner: octokit
          repo: request-action
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload asset to github release if draft release exists.
        id: upload-release-asset
        if: ${{ fromJson(steps.latest_release.outputs.data)[0].draft == true }}
        uses: ihiroky/upload-release-asset@main
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ fromJson(steps.latest_release.outputs.data)[0].upload_url }}
          asset_path: build/server-apps-${{ github.run_number }}.zip
          asset_name: server-apps-${{ github.run_number }}.zip
          asset_content_type: application/zip

      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: server-apps-${{ github.run_number }}
          path: build/apps/
#
# Buid browser extension
#
  browser-extension-for-g1:
    needs: check
    uses: ./.github/workflows/build-extension.yml
    with:
      host: rokiscreen.is.techtouch.jp
